from fastapi import FastAPI, Request, Form
from fastapi.templating import Jinja2Templates
from fastapi.responses import JSONResponse
import pandas as pd
import spacy
import langdetect

# Load spaCy NLP model
nlp = spacy.load("en_core_web_sm")

app = FastAPI()
templates = Jinja2Templates(directory="templates")

# Load Excel Data
complaints_df = pd.read_excel(r"C:\Users\rahul.k\Downloads\comlpaiyts.xlsx")
billing_df = pd.read_excel(r"C:\Users\rahul.k\Downloads\master table data.xlsx")

@app.get("/", response_class=JSONResponse)
def home(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

def detect_language(text: str) -> str:
    """Detect language (English, Hindi, or Hinglish)."""
    try:
        lang = langdetect.detect(text)
        return "hi" if lang == "hi" else "en"
    except:
        return "en"

def process_query(query: str) -> str:
    """Process user queries and return appropriate responses in Hindi, English, or Hinglish."""
    lang = detect_language(query)
    doc = nlp(query.lower())

    # ЁЯФ╣ Bill Inquiry
    if any(token.text in ["bill", "amount", "payment", "account", "status"] for token in doc):
        for acc in billing_df["ACCOUNT_NO"].astype(str):
            if acc in query:
                data = billing_df[billing_df["ACCOUNT_NO"].astype(str) == acc]
                if not data.empty:
                    name = data.iloc[0]["NAME"]
                    load = data.iloc[0]["CONSUMER_LOAD"]
                    meter_no = data.iloc[0]["METER_NUMBER"]
                    bill_status = data.iloc[0]["BILLING_STATUS"]
                    last_bill_month = data.iloc[0]["LAST_BILLMONTH_YEAR"]
                    bill_amt = data.iloc[0]["BILL_AMOUNT"]
                    amount_paid = data.iloc[0]["AMOUNT_PAID"]
                    office_name = data.iloc[0]["OFFICE_NAME"]

                    if lang == "hi":
                        return (f"ЁЯТб **рдЦрд╛рддреЗ {acc} рдХреА рдЬрд╛рдирдХрд╛рд░реА:**\n"
                                f"ЁЯСд рдирд╛рдо: {name}\n"
                                f"тЪб рдЙрдкрднреЛрдХреНрддрд╛ рд▓реЛрдб: {load} kW\n"
                                f"ЁЯФв рдореАрдЯрд░ рдирдВрдмрд░: {meter_no}\n"
                                f"ЁЯУЬ рдмрд┐рд▓рд┐рдВрдЧ рд╕реНрдерд┐рддрд┐: {bill_status}\n"
                                f"ЁЯЧУя╕П рдЕрдВрддрд┐рдо рдмрд┐рд▓ рдорд╣реАрдирд╛: {last_bill_month}\n"
                                f"ЁЯТ░ рдмрд┐рд▓ рд░рд╛рд╢рд┐: тВ╣{bill_amt}\n"
                                f"тЬЕ рднреБрдЧрддрд╛рди рд░рд╛рд╢рд┐: тВ╣{amount_paid}\n"
                                f"ЁЯПв рдХрд╛рд░реНрдпрд╛рд▓рдп: {office_name}")

                    return (f"**Account {acc} Details:**\n"
                            f"ЁЯСд Name: {name}\n"
                            f"тЪб Consumer Load: {load} kW\n"
                            f"ЁЯФв Meter Number: {meter_no}\n"
                            f"ЁЯУЬ Billing Status: {bill_status}\n"
                            f"ЁЯЧУя╕П Last Bill Month-Year: {last_bill_month}\n"
                            f"ЁЯТ░ Bill Amount: тВ╣{bill_amt}\n"
                            f"тЬЕ Amount Paid: тВ╣{amount_paid}\n"
                            f"ЁЯПв Office: {office_name}")
        return "тЭМ Please provide a valid account number." if lang == "en" else "тЭМ рдХреГрдкрдпрд╛ рдПрдХ рдорд╛рдиреНрдп рдЦрд╛рддрд╛ рдирдВрдмрд░ рдкреНрд░рджрд╛рди рдХрд░реЗрдВред"

    # ЁЯФ╣ Power Cut Information
    elif "bijli" in query and "kab" in query:
        return ("тЪб Patna me bijli 2 ghante me wapas aayegi. ЁЯУЮ Call 1912 for updates." if lang == "hi"
                else "тЪб Electricity will be restored in 2 hours in Patna. Call 1912 for updates.")

    # ЁЯФ╣ Complaint Status
    elif any(token.text in ["complaint", "issue", "problem", "status"] for token in doc):
        for acc in complaints_df["ACCOUNT_NO"].astype(str):
            if acc in query:
                data = complaints_df[complaints_df["ACCOUNT_NO"].astype(str) == acc]
                if not data.empty:
                    request_type = data.iloc[0]["REQUEST_TYPE"]
                    status = data.iloc[0]["APP_STATUS"]

                    return (f"ЁЯУв **рд╢рд┐рдХрд╛рдпрдд рдХреА рд╕реНрдерд┐рддрд┐:**\nЁЯФ╣ рдкреНрд░рдХрд╛рд░: {request_type}\nЁЯФ╣ рд╕реНрдерд┐рддрд┐: {status}" if lang == "hi"
                            else f"ЁЯУв **Complaint Status:**\nЁЯФ╣ Type: {request_type}\nЁЯФ╣ Status: {status}")
        return "рдХреЛрдИ рд╢рд┐рдХрд╛рдпрдд рдирд╣реАрдВ рдорд┐рд▓реАред" if lang == "hi" else "No complaints found for this account."

    # ЁЯФ╣ New Connection Inquiry
    elif "naya connection" in query:
        return ("тЬЕ **рдирдпрд╛ рдмрд┐рдЬрд▓реА рдХрдиреЗрдХреНрд╢рди рдкреНрд░рдХреНрд░рд┐рдпрд╛:**\n"
                "1я╕ПтГг [SBPDCL Website](https://www.sbpdcl.co.in) рдкрд░ рдЬрд╛рдПрдВ\n"
                "2я╕ПтГг рдСрдирд▓рд╛рдЗрди рдЖрд╡реЗрджрди рдХрд░реЗрдВ\n"
                "3я╕ПтГг рд╕реБрд░рдХреНрд╖рд╛ рдЬрдорд╛ рд░рд╛рд╢рд┐ рдХрд╛ рднреБрдЧрддрд╛рди рдХрд░реЗрдВ\n"
                "4я╕ПтГг 7 рджрд┐рдиреЛрдВ рдореЗрдВ рдореАрдЯрд░ рдЗрдВрд╕реНрдЯреЙрд▓ рд╣реЛрдЧрд╛\n"
                "ЁЯУЮ рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 1912" if lang == "hi"
                else "тЬЕ **New Connection Process:**\n"
                     "1я╕ПтГг Visit: [SBPDCL Website](https://www.sbpdcl.co.in)\n"
                     "2я╕ПтГг Apply Online\n"
                     "3я╕ПтГг Pay Security Deposit\n"
                     "4я╕ПтГг Meter Installation in 7 Days\n"
                     "ЁЯУЮ Helpline: 1912")

    # ЁЯФ╣ Load Extension
    elif "load" in query and "badhana" in query:
        return ("ЁЯФ╣ **рд▓реЛрдб рдмрдврд╝рд╛рдиреЗ рдХреА рдкреНрд░рдХреНрд░рд┐рдпрд╛:**\n"
                "1я╕ПтГг [SBPDCL Website](https://www.sbpdcl.co.in) рдкрд░ рдЖрд╡реЗрджрди рдХрд░реЗрдВ\n"
                "2я╕ПтГг рдПрдбреНрд░реЗрд╕ рдФрд░ рдЖрдИрдбреА рдкреНрд░реВрдл рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ\n"
                "3я╕ПтГг рд▓реЛрдб рдмрдврд╝рд╛рдиреЗ рдХреА рдлреАрд╕ рдЬрдорд╛ рдХрд░реЗрдВ\n"
                "ЁЯУЮ рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 1912" if lang == "hi"
                else "ЁЯФ╣ **Load Enhancement Process:**\n"
                     "1я╕ПтГг Apply Online at [SBPDCL Website](https://www.sbpdcl.co.in)\n"
                     "2я╕ПтГг Upload Address & ID Proof\n"
                     "3я╕ПтГг Pay Load Enhancement Fee\n"
                     "ЁЯУЮ Helpline: 1912")

    # ЁЯФ╣ Smart Meter Benefits
    elif "smart meter" in query:
        return ("ЁЯФ╣ **рд╕реНрдорд╛рд░реНрдЯ рдореАрдЯрд░ рдХреЗ рдлрд╛рдпрджреЗ:**\n"
                "тЬЕ рдСрдирд▓рд╛рдЗрди рд░рд┐рдЪрд╛рд░реНрдЬ\n"
                "тЬЕ рд╕рдЯреАрдХ рдмрд┐рд▓рд┐рдВрдЧ\n"
                "тЬЕ рддреБрд░рдВрдд рдХрдЯреМрддреА/рд░реАрдХрдиреЗрдХреНрд╢рди\n"
                "тЬЕ рдорд╛рд╕рд┐рдХ рдЙрдкрдпреЛрдЧ рдЕрд▓рд░реНрдЯ" if lang == "hi"
                else "ЁЯФ╣ **Smart Meter Benefits:**\n"
                     "тЬЕ Online Recharge\n"
                     "тЬЕ Accurate Billing\n"
                     "тЬЕ Instant Power Cut/Reconnection\n"
                     "тЬЕ Monthly Usage Alerts")

    # ЁЯФ╣ Default Response
    else:
        return ("ЁЯдЦ рдореБрдЭреЗ рдЖрдкрдХреА рдмрд╛рдд рд╕рдордЭ рдореЗрдВ рдирд╣реАрдВ рдЖрдИ! рдХреНрдпрд╛ рдЖрдк рдмрд┐рдЬрд▓реА рдмрд┐рд▓, рд╢рд┐рдХрд╛рдпрдд рдпрд╛ рдирдП рдХрдиреЗрдХреНрд╢рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫ рд░рд╣реЗ рд╣реИрдВ?" if lang == "hi"
                else "ЁЯдЦ I didn't understand! Are you asking about your electricity bill, complaint, or new connection?")

@app.post("/chat/")
async def chat(message: str = Form(...)):
    reply = process_query(message)
    return {"reply": reply}
